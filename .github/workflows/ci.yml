name: CI
on: [push, pull_request]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: 
          node-version: 20
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Type check
        run: npm run typecheck
        continue-on-error: true
      
      - name: Lint
        run: npm run lint
        continue-on-error: true
      
      - name: Run unit and integration tests
        run: npm run test:coverage
      
      - name: Enforce coverage thresholds
        run: |
          node -e "
            const fs = require('fs');
            if (!fs.existsSync('./coverage/coverage-summary.json')) {
              console.error('Coverage file not found');
              process.exit(1);
            }
            const coverage = JSON.parse(fs.readFileSync('./coverage/coverage-summary.json', 'utf8'));
            const { lines, functions, branches, statements } = coverage.total;
            
            console.log('Coverage Summary:');
            console.log('Lines:', lines.pct + '%');
            console.log('Functions:', functions.pct + '%');
            console.log('Branches:', branches.pct + '%');
            console.log('Statements:', statements.pct + '%');
            
            const coreThreshold = 85;
            const uiThreshold = 60;
            
            // For now, use overall threshold of 85%
            // In the future, we can implement per-directory thresholds
            if (lines.pct < coreThreshold) {
              console.error('❌ Line coverage (' + lines.pct + '%) is below threshold (' + coreThreshold + '%)');
              process.exit(1);
            }
            
            if (functions.pct < coreThreshold) {
              console.error('❌ Function coverage (' + functions.pct + '%) is below threshold (' + coreThreshold + '%)');
              process.exit(1);
            }
            
            console.log('✅ Coverage thresholds met');
          "
      
      - name: Upload coverage reports
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/

  e2e:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: 
          node-version: 20
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium
      
      - name: Build application
        run: npm run build
      
      - name: Start application and run E2E tests
        run: |
          npm run start &
          npx wait-on http://localhost:3000 --timeout 60000
          npm run e2e
      
      - name: Upload E2E test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
